# Use postgres/example user/password credentials
version: '3.2'
services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    networks:
      - postgres
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
  ingest_from_apis:
    image: centos
    build:
      context: ./etl
      dockerfile: Dockerfile  # Make sure this points to the correct Dockerfile in the context
    networks:
      - postgres
    depends_on:
      - db
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; python /app/src/get_apis_data.py'
    env_file:
      - .env
  load_to_rds:
    image: centos
    build:
      context: ./etl
      dockerfile: Dockerfile
    networks:
      - postgres
    depends_on:
      - db
      - ingest_from_apis
    command: bash -c 'sleep 70; python /app/src/load_to_rds.py'
    env_file:
      - .env
networks:
  postgres:
    driver: bridge